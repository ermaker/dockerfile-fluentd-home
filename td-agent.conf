<source>
  @type forward
</source>

<match raw.**>
  @type record_reformer
  tag color
  <record>
    tag ${tag_suffix[1]}
  </record>
</match>

<match color>
  @type color_stripper
  tag decolorized
</match>

<match decolorized>
  @type rewrite_tag_filter
  rewriterule1 tag ^(.*)$ remove_tag.$1
</match>

<match remove_tag.**>
  @type record_reformer
  remove_keys tag
  tag ${tag_suffix[1]}
</match>


<match docker.**>
  @type record_reformer
  tag docker_parse_container_id
  <record>
    hostname ${tag_parts[1]}
  </record>
</match>

<match docker_parse_container_id>
  @type parser
  tag docker_set_tag
  format /^\/((?<project_name>.+?)_(?<container_name_short>.+?)_(?<container_number>\d+?)|(?<container_name_short>.+?))$/
  key_name container_name
  reserve_data yes
</match>

<match docker_set_tag>
  @type record_reformer
  tag ${container_name_short}
</match>

<match xing>
  @type record_reformer
  tag ruby.${tag}
</match>

<filter ruby.**>
  @type parser
  format /^((?<log_level_short>.), \[(?<time>.*?)\s+?#(?<pid>\d+)\]\s+?(?<log_level>\w+?) -- (?<log_tag>\S+?)?: )?(?<log>.*?)$/
  key_name log
  reserve_data yes
</filter>

<filter ruby.**>
  @type deparser
  format %s
  format_key_names log
  key_name message
  reserve_data yes
</filter>

<match **>
  @type stdout
</match>
